{
  "name": "randomhost/webcamoverlay",
  "tagline": "Provides image overlay functionality for IP cam images.",
  "body": "[![Build Status][0]][1]\r\n\r\nrandomhost/webcamoverlay\r\n========================\r\n\r\nThis package was developed to compensate for the lack of image overlay\r\ncapabilities of some less sophisticated IP cameras. It takes the original image\r\nas uploaded by the camera from the web server and uses the GD library to modify\r\nthe image on the fly before displaying it to the website visitor.\r\n\r\n**Features:**\r\n\r\n- picture watermarking with configurable image positions\r\n- text watermarking (original image \"modified\" date + freely configurable text)\r\n- configurable timed overlay image (\"downtime\" picture)\r\n\r\nUsage\r\n-----\r\n\r\nA basic approach at using this package could look like this:\r\n\r\n```php\r\n<?php\r\nnamespace randomhost\\Image\\Webcam;\r\n\r\nrequire_once '/path/to/vendor/autoload.php';\r\n\r\n// get WebcamOverlay instance\r\n$overlay = new Overlay();\r\n\r\n// set basic webcam image properties\r\n$overlay->setWebcamImagePath('webcam.jpg');\r\n\r\n// render image\r\n$overlay->render();\r\n```\r\n\r\nThis will instantiate the class, set the name of the uploaded webcam image and\r\njust render it without any overlay.\r\n\r\nAssuming that you named this file `webcam.php`, you should now be able to\r\naccess your webcam image at `http://example.com/webcam.php`\r\n\r\nA more detailed example can be found in `src/www/webcam/index.php`.\r\n\r\nLicense\r\n-------\r\n\r\nSee LICENSE.txt for full license details.\r\n\r\n[0]: https://travis-ci.org/randomhost/webcamoverlay.svg\r\n[1]: https://travis-ci.org/randomhost/webcamoverlay\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}